pipeline {
  agent none
  options {
    timeout(time: 30, unit: 'MINUTES')
  }
  stages {
    stage('Build') {
      agent {
        kubernetes {
          cloud 'kubernetes'
          yaml '''
            apiVersion: v1
            kind: Pod
            metadata:
              name: kaniko
            spec:
              containers:
              - name: kaniko
                image: gcr.io/kaniko-project/executor:debug
                imagePullPolicy: Always
                resources:
                  limits:
                    cpu: '1'
                    memory: 2Gi
                // volumeMounts:
                // - name: kaniko-secret
                //   mountPath: /secret
                // env:
                // - name: GOOGLE_APPLICATION_CREDENTIALS
                //   value: /secret/kaniko-secret.json
              restartPolicy: Never
              // volumes:
              // - name: kaniko-secret
              //   secret:
              //     secretName: kaniko-secret
                '''
        }
      }
      steps {
        container('kaniko') {
          // sh 'cd src/backend && docker build --tag ntg-garage-backend:latest .'
          sh '''cd src/backend && 
                /kaniko/executor 
                  --dockerfile=./Dockerfile 
                  --context=dir:///$(pwd)
                  --destination=ntg-garage/backend:latest
                  --no-push'''
        }
        // dir('src/backend') {
        //   script {
        //     npm ci
        //   }  
        // }
      }
    }
  }
}